import hudson.model.User
import jenkins.security.SecurityRealm

// Dapatkan semua pengguna di Jenkins
def users = User.getAll()

// Loop melalui semua pengguna dan tampilkan grup mereka
users.each { user ->
    println "User: ${user.getId()}"
    
    // Dapatkan informasi otentikasi pengguna
    def details = user.getProperty(jenkins.security.LastGrantedAuthoritiesProperty)
    
    // Jika pengguna memiliki detail grup
    if (details != null) {
        def groups = details.getAuthorities()
        if (!groups.isEmpty()) {
            println "Groups: ${groups.join(', ')}"
        } else {
            println "Groups: No groups"
        }
    } else {
        println "Groups: No group information available"
    }
    
    println "-----------------------------"
}



import jenkins.model.Jenkins

def jenkinsInstance = Jenkins.getInstance()

if (jenkinsInstance != null) {
    println "Jenkins instance loaded successfully."
} else {
    println "Failed to load Jenkins instance."
}



import hudson.model.User
import jenkins.model.Jenkins

// Mendapatkan instance Jenkins
def jenkinsInstance = Jenkins.instance

// Memeriksa apakah securityRealm telah diatur
def securityRealm = jenkinsInstance.getSecurityRealm()

if (securityRealm != null) {
    // Mendapatkan semua pengguna yang terdaftar di Jenkins
    def users = User.getAll()

    users.each { user ->
        println "User: ${user.getId()}"

        try {
            // Mendapatkan grup pengguna dari securityRealm
            def authorities = securityRealm.loadUserByUsername(user.getId())?.authorities
            if (authorities) {
                def groups = authorities.collect { it.authority }
                println "Groups: ${groups.join(', ')}"
            } else {
                println "Groups: No groups found"
            }
        } catch (Exception e) {
            println "Error retrieving groups for user ${user.getId()}: ${e.message}"
        }

        println "-----------------------------"
    }
} else {
    println "Security realm is not configured."
}
